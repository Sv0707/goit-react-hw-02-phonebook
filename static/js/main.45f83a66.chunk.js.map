{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.jsx","components/Section/Section.jsx","components/Phonebook/Phonebook.jsx","components/Filter/Filter.jsx","components/App/App.js","index.js"],"names":["module","exports","ContactList","filterContact","removeContact","map","contact","className","s","item","name","number","button","type","onClick","id","Section","title","children","INITIAL_STATE","Phonebook","state","handleSubmit","e","preventDefault","props","onSubmit","reset","handleChange","target","value","setState","this","label","pattern","required","onChange","Component","Filter","filter","App","contacts","checkedName","find","toLowerCase","addContact","newContact","nanoid","alert","prevState","includes","ContactsList","ReactDom","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.45f83a66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"ContactsList_value__1fqX9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3dmUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Filter_button__17r1p\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactsList.module.css\";\r\n\r\nconst ContactList = ({ filterContact, removeContact }) => {\r\n  return (\r\n    <ul>\r\n      {filterContact.map((contact) => {\r\n        return (\r\n          <li key={contact.id} className={s.item}>\r\n            <p>{contact.name}: </p>\r\n            <p>{contact.number}</p>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => removeContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  filterContacts: PropTypes.array,\r\n  removeContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Phonebook.module.css\";\n\nconst INITIAL_STATE = { name: \"\", number: \"\" };\n\nclass Phonebook extends Component {\n  state = { ...INITIAL_STATE };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit({ ...this.state });\n    this.reset();\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          {\" \"}\n          Name\n          <input\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          {\" \"}\n          Phone\n          <input\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Phonebook;\n\nPhonebook.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input value={filter} onChange={handleChange} type=\"text\" name=\"filter\" />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ContactsList from \"../ContactsList/ContactsList\";\nimport Section from \"../Section/Section\";\nimport { nanoid } from \"nanoid\";\n// import data from './contacts.json';\nimport Phonebook from \"../Phonebook/Phonebook\";\nimport Filter from \"../Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  checkedName = (name) => {\n    this.state.contacts.find(\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n  };\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    this.checkedName(name)\n      ? alert(`${name} is already in contacts!`)\n      : this.setState((prevState) => ({\n          contacts: [...prevState.contacts, newContact],\n        }));\n  };\n\n  removeContact = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts].filter((contact) => contact.id !== id),\n      };\n    });\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n   return (\n      <div>\n        <Section title=\"Phonebook\">\n          <Phonebook onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter handleChange={this.handleChange} filter={this.state.filter} />\n          {\n            <ContactsList\n              filterContact={this.filterContact()}\n              removeContact={this.removeContact}\n            />\n          }\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}